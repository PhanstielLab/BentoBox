% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bb_params.R
\name{bb_params}
\alias{bb_params}
\title{bb_params: BentoBox parameters object}
\usage{
bb_params(assembly = "hg38", gene = NULL, geneBuffer = NULL, ...)
}
\arguments{
\item{assembly}{String defining the genome build.
Default value is \code{assembly = "hg38"}.}

\item{gene}{(optional) String naming a gene used to set the
chrom, chromstart, and chromend arguments.}

\item{geneBuffer}{(optional) Integer base-pairs to extend the
start and end of a gene defined by argument \code{gene}.
Can be one integer or a vector of length 2, where the first integer
will extend the start of the gene and the second integer
will extend the end of the gene.}

\item{...}{This function will take any BentoBox function
parameters and their values.}
}
\value{
Returns an object of class \code{bb_params}
containing BentoBox function arguments.
}
\description{
Creates an object of class "bb_params" that can be used by
BentoBox functions. bb_params can be used to set a set of parameters
to be shared across multiple functions.
}
\details{
bb_params generates arguments from exported BentoBox functions at
loading time of the package. Arguments defined in a bb_params object
can be passed into the \code{params} argument of BentoBox functions.
bb_params arguments can be overridden from within BentoBox functions.

bb_params also provides an alternative region definition mechanism.
Given a gene name and genome assembly, bb_params returns the appropriate
"chrom", "chromstart", and "chromend" with a default buffer of
\code{(gene length) / 2} added to the ends of the gene coordinates.
The buffer amount can be set manually with the \code{geneBuffer}
parameter. Buffer extending beyond the length of the chromosome
will be trimmed.
}
\examples{
## Load hg19 genomic annotation packages
library("TxDb.Hsapiens.UCSC.hg19.knownGene")
library("org.Hs.eg.db")

## Define parameters
p1 <- bb_params(gene = "IL1B", assembly = "hg19")

## Optionally add more parameters
p2 <- bb_params(fontsize = 10)

## Combine parameters and pass them to a BentoBox function
bb_plotGenes(params = c(p1, p2))
}
